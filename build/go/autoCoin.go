// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"fmt"
	"log"
	"math/big"
	"strings"
	"io/ioutil"
	//"time"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
	"github.com/ethereum/go-ethereum/rpc"
	"github.com/ethereum/go-ethereum/ethclient"

)
// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TokenABI is the input ABI used to generate the binding from.
const TokenABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"}],\"name\":\"consumerCancelChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__proofOfEncryption\",\"type\":\"string\"},{\"name\":\"__channelSerial\",\"type\":\"uint256\"}],\"name\":\"saveReceivedContent\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"},{\"name\":\"__balanceProof\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"__balance\",\"type\":\"uint256\"}],\"name\":\"saveBalanceProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__itemPrice\",\"type\":\"uint256\"},{\"name\":\"__itemLocation\",\"type\":\"string\"},{\"name\":\"__itemSize\",\"type\":\"string\"},{\"name\":\"__itemType\",\"type\":\"string\"},{\"name\":\"__itemDuration\",\"type\":\"uint256\"},{\"name\":\"__itemCreateTime\",\"type\":\"uint256\"},{\"name\":\"__itemHash\",\"type\":\"bytes32\"}],\"name\":\"registerItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__deposit\",\"type\":\"uint256\"},{\"name\":\"__itemSerial\",\"type\":\"uint256\"}],\"name\":\"createChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"},{\"name\":\"__balanceProof\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"__balance\",\"type\":\"uint256\"}],\"name\":\"publisherSideCancelChannel\",\"outputs\":[{\"name\":\"state\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"},{\"name\":\"__encryptionKey\",\"type\":\"string\"},{\"name\":\"__balanceProof\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"__balance\",\"type\":\"uint256\"}],\"name\":\"completeChannel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"}],\"name\":\"DeliverChannel\",\"outputs\":[{\"name\":\"_publisher\",\"type\":\"address\"},{\"name\":\"_consumer\",\"type\":\"address\"},{\"name\":\"_deposit\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_CreateTime\",\"type\":\"uint256\"},{\"name\":\"_ItemSerial\",\"type\":\"uint256\"},{\"name\":\"_proofOfEncryption\",\"type\":\"string\"},{\"name\":\"_deliveredItemHash\",\"type\":\"bytes32\"},{\"name\":\"_tempBalanceProof\",\"type\":\"uint256\"},{\"name\":\"_encryptionKey\",\"type\":\"string\"},{\"name\":\"_state\",\"type\":\"uint256\"},{\"name\":\"_isRegistered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"__itemSerial\",\"type\":\"uint256\"}],\"name\":\"DeliverItem\",\"outputs\":[{\"name\":\"_publisher\",\"type\":\"address\"},{\"name\":\"_itemPrice\",\"type\":\"uint256\"},{\"name\":\"_itemLocation\",\"type\":\"string\"},{\"name\":\"_itemSize\",\"type\":\"string\"},{\"name\":\"_itemType\",\"type\":\"string\"},{\"name\":\"_itemDuration\",\"type\":\"uint256\"},{\"name\":\"_itemCreateTime\",\"type\":\"uint256\"},{\"name\":\"__itemHash\",\"type\":\"bytes32\"},{\"name\":\"_isRegistered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"__channelSerial\",\"type\":\"uint256\"},{\"name\":\"__itemHash\",\"type\":\"bytes32\"}],\"name\":\"saveItemHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]"

// TokenBin is the compiled bytecode used for deploying new contracts.
const TokenBin = `60806040526005600655620151806007556040805190810160405280600881526020017f6175746f436f696e000000000000000000000000000000000000000000000000815250600e90805190602001906200005d92919062000546565b506040805190810160405280600381526020017f41544f0000000000000000000000000000000000000000000000000000000000815250600f9080519060200190620000ab92919062000546565b506002601060006101000a81548160ff021916908360ff160217905550348015620000d557600080fd5b50600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620001705780601f10620001445761010080835404028352916020019162000170565b820191906000526020600020905b8154815290600101906020018083116200015257829003601f168201915b5050505050600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200020f5780601f10620001e3576101008083540402835291602001916200020f565b820191906000526020600020905b815481529060010190602001808311620001f157829003601f168201915b5050505050601060009054906101000a900460ff1682600390805190602001906200023c92919062000546565b5081600490805190602001906200025592919062000546565b5080600560006101000a81548160ff021916908360ff16021790555050505033600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200037f6200034f62000385640100000000026401000000009004565b601060009054906101000a900460ff1660ff16600a0a620186a002620003af640100000000026401000000009004565b620005f5565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620003ec57600080fd5b62000411816002546200052464010000000002620035dd179091906401000000009004565b60028190555062000478816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200052464010000000002620035dd179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101515156200053c57600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200058957805160ff1916838001178555620005ba565b82800160010185558215620005ba579182015b82811115620005b95782518255916020019190600101906200059c565b5b509050620005c99190620005cd565b5090565b620005f291905b80821115620005ee576000816000905550600101620005d4565b5090565b90565b613b7e80620006056000396000f3fe608060405260043610610143576000357c01000000000000000000000000000000000000000000000000000000009004806306fdde0314610148578063095ea7b3146101d85780630fd93a2c1461024b57806318160ddd1461028657806323b872dd146102b15780632f0dd72114610344578063313ce5671461042e578063352398221461045f57806339509351146104e757806352d2225e1461055a57806370a0823114610778578063715018a6146107dd57806377b6198f146107f45780637ca4e563146108395780638da5cb5b146108bd5780638f32d59b14610914578063959bd5de1461094357806395d89b4114610a4a578063a457c2d714610ada578063a9059cbb14610b4d578063b31b637514610bc0578063c96710d514610d82578063d2ee42e314610f68578063dd62ed3e14610fc5578063f2fde38b1461104a575b600080fd5b34801561015457600080fd5b5061015d61109b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019d578082015181840152602081019050610182565b50505050905090810190601f1680156101ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e457600080fd5b50610231600480360360408110156101fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113d565b604051808215151515815260200191505060405180910390f35b34801561025757600080fd5b506102846004803603602081101561026e57600080fd5b810190808035906020019092919050505061126a565b005b34801561029257600080fd5b5061029b611452565b6040518082815260200191505060405180910390f35b3480156102bd57600080fd5b5061032a600480360360608110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061145c565b604051808215151515815260200191505060405180910390f35b34801561035057600080fd5b506104146004803603604081101561036757600080fd5b810190808035906020019064010000000081111561038457600080fd5b82018360208201111561039657600080fd5b803590602001918460018302840111640100000000831117156103b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611664565b604051808215151515815260200191505060405180910390f35b34801561043a57600080fd5b506104436117a6565b604051808260ff1660ff16815260200191505060405180910390f35b34801561046b57600080fd5b506104cd600480360360c081101561048257600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506117bd565b604051808215151515815260200191505060405180910390f35b3480156104f357600080fd5b506105406004803603604081101561050a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611965565b604051808215151515815260200191505060405180910390f35b34801561056657600080fd5b50610776600480360360e081101561057d57600080fd5b8101908080359060200190929190803590602001906401000000008111156105a457600080fd5b8201836020820111156105b657600080fd5b803590602001918460018302840111640100000000831117156105d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561063b57600080fd5b82018360208201111561064d57600080fd5b8035906020019184600183028401116401000000008311171561066f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106d257600080fd5b8201836020820111156106e457600080fd5b8035906020019184600183028401116401000000008311171561070657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919080359060200190929190505050611b9c565b005b34801561078457600080fd5b506107c76004803603602081101561079b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dcb565b6040518082815260200191505060405180910390f35b3480156107e957600080fd5b506107f2611e13565b005b34801561080057600080fd5b506108376004803603604081101561081757600080fd5b810190808035906020019092919080359060200190929190505050611ee7565b005b34801561084557600080fd5b506108a7600480360360c081101561085c57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190505050612206565b6040518082815260200191505060405180910390f35b3480156108c957600080fd5b506108d2612432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092057600080fd5b5061092961245c565b604051808215151515815260200191505060405180910390f35b34801561094f57600080fd5b50610a48600480360360e081101561096657600080fd5b81019080803590602001909291908035906020019064010000000081111561098d57600080fd5b82018360208201111561099f57600080fd5b803590602001918460018302840111640100000000831117156109c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506124b4565b005b348015610a5657600080fd5b50610a5f6126d4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a9f578082015181840152602081019050610a84565b50505050905090810190601f168015610acc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ae657600080fd5b50610b3360048036036040811015610afd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612776565b604051808215151515815260200191505060405180910390f35b348015610b5957600080fd5b50610ba660048036036040811015610b7057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506129ad565b604051808215151515815260200191505060405180910390f35b348015610bcc57600080fd5b50610bf960048036036020811015610be357600080fd5b81019080803590602001909291905050506129c4565b604051808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a8152602001898152602001888152602001806020018781526020018681526020018060200185815260200184151515158152602001838103835289818151815260200191508051906020019080838360005b83811015610cd5578082015181840152602081019050610cba565b50505050905090810190601f168015610d025780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015610d3b578082015181840152602081019050610d20565b50505050905090810190601f168015610d685780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b348015610d8e57600080fd5b50610dbb60048036036020811015610da557600080fd5b8101908080359060200190929190505050612cf6565b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018060200180602001806020018881526020018781526020018681526020018515151515815260200184810384528b818151815260200191508051906020019080838360005b83811015610e57578082015181840152602081019050610e3c565b50505050905090810190601f168015610e845780820380516001836020036101000a031916815260200191505b5084810383528a818151815260200191508051906020019080838360005b83811015610ebd578082015181840152602081019050610ea2565b50505050905090810190601f168015610eea5780820380516001836020036101000a031916815260200191505b50848103825289818151815260200191508051906020019080838360005b83811015610f23578082015181840152602081019050610f08565b50505050905090810190601f168015610f505780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b348015610f7457600080fd5b50610fab60048036036040811015610f8b57600080fd5b810190808035906020019092919080359060200190929190505050613092565b604051808215151515815260200191505060405180910390f35b348015610fd157600080fd5b5061103460048036036040811015610fe857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131c4565b6040518082815260200191505060405180910390f35b34801561105657600080fd5b506110996004803603602081101561106d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061324b565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111335780601f1061110857610100808354040283529160200191611133565b820191906000526020600020905b81548152906001019060200180831161111657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561117a57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b8060011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff1615151415156112a157600080fd5b6000600b6000838152602001908152602001600020600a01541415156112c657600080fd5b42600b600083815260200190815260200160002060030154600b6000848152602001908152602001600020600401540110151561130257600080fd5b813373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561137357600080fd5b600b600084815260200190815260200160002060080154600b6000858152602001908152602001600020600201541115156113ad57600080fd5b60006064600b600086815260200190815260200160002060080154600654028115156113d557fe5b049050611430600b600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600b6000888152602001908152602001600020600201548461326a565b6001600b6000868152602001908152602001600020600a018190555050505050565b6000600254905090565b60006114ed82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a890919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115788484846133ca565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b60008160011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff16151514151561169d57600080fd5b6000600b6000838152602001908152602001600020600a01541415156116c257600080fd5b42600b600083815260200190815260200160002060030154600b600084815260200190815260200160002060040154011115156116fe57600080fd5b823373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561176f57600080fd5b84600b600086815260200190815260200160002060060190805190602001906117999291906139ab565b5060019250505092915050565b6000600560009054906101000a900460ff16905090565b60008660011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff1615151415156117f657600080fd5b6000600b6000838152602001908152602001600020600a015414151561181b57600080fd5b42600b600083815260200190815260200160002060030154600b6000848152602001908152602001600020600401540111151561185757600080fd5b873373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156118c857600080fd5b83600b60008b8152602001908152602001600020600201541115156118ec57600080fd5b61192f600b60008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689898989613596565b151561193a57600080fd5b83600b60008b8152602001908152602001600020600801819055506001925050509695505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119a257600080fd5b611a3182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135dd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60006008600081548092919060010191905055905060001515600a600083815260200190815260200160002060090160009054906101000a900460ff161515141515611be757600080fd5b33600a600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600a60008381526020019081526020016000206001018190555086600a60008381526020019081526020016000206002019080519060200190611c819291906139ab565b5085600a60008381526020019081526020016000206003019080519060200190611cac9291906139ab565b5084600a60008381526020019081526020016000206004019080519060200190611cd79291906139ab565b5083600a60008381526020019081526020016000206005018190555082600a60008381526020019081526020016000206006018190555081600a6000838152602001908152602001600020600701819055506001600a600083815260200190815260200160002060090160006101000a81548160ff021916908315150217905550600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611e1b61245c565b1515611e2657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006009600081548092919060010191905055905060011515600a600084815260200190815260200160002060090160009054906101000a900460ff161515141515611f3257600080fd5b82600a600084815260200190815260200160002060010154141515611f5657600080fd5b611f6033846135fe565b600a600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600b600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600b600083815260200190815260200160002060020181905550600754600b60008381526020019081526020016000206003018190555042600b60008381526020019081526020016000206004018190555081600b6000838152602001908152602001600020600501819055506000600b6000838152602001908152602001600020600a01819055506001600b6000838152602001908152602001600020600b0160006101000a81548160ff021916908315150217905550600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550600d6000600a600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550505050565b60008660011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff16151514151561223f57600080fd5b6000600b6000838152602001908152602001600020600a015414151561226457600080fd5b42600b600083815260200190815260200160002060030154600b600084815260200190815260200160002060040154011015156122a057600080fd5b873373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561231157600080fd5b83600b60008b81526020019081526020016000206002015411151561233557600080fd5b612378600b60008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689898989613596565b151561238357600080fd5b60006064856006540281151561239557fe5b0490506123f0600b60008c815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600b60008e8152602001908152602001600020600201548461326a565b6001600b60008c8152602001908152602001600020600a0181905550600b60008b8152602001908152602001600020600a015493505050509695505050505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b8660011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff1615151415156124eb57600080fd5b6000600b6000838152602001908152602001600020600a015414151561251057600080fd5b42600b600083815260200190815260200160002060030154600b6000848152602001908152602001600020600401540111151561254c57600080fd5b873373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156125bd57600080fd5b6125e56125c98a613695565b600b60008c8152602001908152602001600020600701546136b5565b15156125f057600080fd5b612633600b60008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688888888613596565b151561263e57600080fd5b82600b60008b81526020019081526020016000206002015414151561266257600080fd5b61268233600b60008c8152602001908152602001600020600201546136e9565b87600b60008b815260200190815260200160002060090190805190602001906126ac9291906139ab565b506002600b60008b8152602001908152602001600020600a0181905550505050505050505050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561276c5780601f106127415761010080835404028352916020019161276c565b820191906000526020600020905b81548152906001019060200180831161274f57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156127b357600080fd5b61284282600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a890919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60006129ba3384846133ca565b6001905092915050565b6000806000806000806060600080606060008060011515600b60008f8152602001908152602001600020600b0160009054906101000a900460ff161515141515612a0d57600080fd5b612a15613a2b565b600b60008f815260200190815260200160002061018060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ba25780601f10612b7757610100808354040283529160200191612ba2565b820191906000526020600020905b815481529060010190602001808311612b8557829003601f168201915b505050505081526020016007820154815260200160088201548152602001600982018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c585780601f10612c2d57610100808354040283529160200191612c58565b820191906000526020600020905b815481529060010190602001808311612c3b57829003601f168201915b50505050508152602001600a8201548152602001600b820160009054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518b61016001518595508292509c509c509c509c509c509c509c509c509c509c509c509c505091939597999b5091939597999b565b600080606080606060008060008060011515600a60008c815260200190815260200160002060090160009054906101000a900460ff161515141515612d3a57600080fd5b612d42613abe565b600a60008c815260200190815260200160002061014060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e5b5780601f10612e3057610100808354040283529160200191612e5b565b820191906000526020600020905b815481529060010190602001808311612e3e57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612efd5780601f10612ed257610100808354040283529160200191612efd565b820191906000526020600020905b815481529060010190602001808311612ee057829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f9f5780601f10612f7457610100808354040283529160200191612f9f565b820191906000526020600020905b815481529060010190602001808311612f8257829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820180548060200260200160405190810160405280929190818152602001828054801561301557602002820191906000526020600020905b815481526020019060010190808311613001575b505050505081526020016009820160009054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e00151886101200151869650859550849450995099509950995099509950995099509950509193959799909294969850565b60008260011515600b6000838152602001908152602001600020600b0160009054906101000a900460ff1615151415156130cb57600080fd5b6000600b6000838152602001908152602001600020600a01541415156130f057600080fd5b42600b600083815260200190815260200160002060030154600b6000848152602001908152602001600020600401540111151561312c57600080fd5b833373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561319d57600080fd5b83600b60008781526020019081526020016000206007018190555060019250505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61325361245c565b151561325e57600080fd5b61326781613780565b50565b6132cd61328082846133a890919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135dd90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613360816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135dd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60008282111515156133b957600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561340657600080fd5b613457816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a890919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506134ea816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135dd90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60006135a48585858561387c565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b60008082840190508381101515156135f457600080fd5b8091505092915050565b61364f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133a890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000600b6000838152602001908152602001600020600501549050919050565b600081600a60008581526020019081526020016000206007015414156136de57600190506136e3565b600090505b92915050565b61373a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546135dd90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156137bc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060606040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081876040516020018083805190602001908083835b6020831015156138f457805182526020820191506020810190506020830392506138cf565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120905060018187878760405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613995573d6000803e3d6000fd5b5050506020604051035192505050949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139ec57805160ff1916838001178555613a1a565b82800160010185558215613a1a579182015b82811115613a195782518255916020019190600101906139fe565b5b509050613a279190613b2d565b5090565b61018060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160608152602001600080191681526020016000815260200160608152602001600081526020016000151581525090565b61014060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081526020016060815260200160608152602001600081526020016000815260200160008019168152602001606081526020016000151581525090565b613b4f91905b80821115613b4b576000816000905550600101613b33565b5090565b9056fea165627a7a723058208911d4aa9ede9359399698a680804a590b91b33cf4ba9e4eadf9c3acc3a49b2d0029`

// DeployToken deploys a new Ethereum contract, binding an instance of Token to it.
func DeployToken(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Token, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TokenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// Token is an auto generated Go binding around an Ethereum contract.
type Token struct {
	TokenCaller     // Read-only binding to the contract
	TokenTransactor // Write-only binding to the contract
	TokenFilterer   // Log filterer for contract events
}

// TokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type TokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TokenSession struct {
	Contract     *Token            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TokenCallerSession struct {
	Contract *TokenCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// TokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TokenTransactorSession struct {
	Contract     *TokenTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type TokenRaw struct {
	Contract *Token // Generic contract binding to access the raw methods on
}

// TokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TokenCallerRaw struct {
	Contract *TokenCaller // Generic read-only contract binding to access the raw methods on
}

// TokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TokenTransactorRaw struct {
	Contract *TokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewToken creates a new instance of Token, bound to a specific deployed contract.
func NewToken(address common.Address, backend bind.ContractBackend) (*Token, error) {
	contract, err := bindToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// NewTokenCaller creates a new read-only instance of Token, bound to a specific deployed contract.
func NewTokenCaller(address common.Address, caller bind.ContractCaller) (*TokenCaller, error) {
	contract, err := bindToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TokenCaller{contract: contract}, nil
}

// NewTokenTransactor creates a new write-only instance of Token, bound to a specific deployed contract.
func NewTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*TokenTransactor, error) {
	contract, err := bindToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TokenTransactor{contract: contract}, nil
}

// NewTokenFilterer creates a new log filterer instance of Token, bound to a specific deployed contract.
func NewTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*TokenFilterer, error) {
	contract, err := bindToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TokenFilterer{contract: contract}, nil
}

// bindToken binds a generic wrapper to an already deployed contract.
func bindToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.TokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.contract.Transact(opts, method, params...)
}

// DeliverChannel is a free data retrieval call binding the contract method 0xb31b6375.
//
// Solidity: function DeliverChannel(__channelSerial uint256) constant returns(_publisher address, _consumer address, _deposit uint256, _duration uint256, _CreateTime uint256, _ItemSerial uint256, _proofOfEncryption string, _deliveredItemHash bytes32, _tempBalanceProof uint256, _encryptionKey string, _state uint256, _isRegistered bool)
func (_Token *TokenCaller) DeliverChannel(opts *bind.CallOpts, __channelSerial *big.Int) (struct {
	Publisher         common.Address
	Consumer          common.Address
	Deposit           *big.Int
	Duration          *big.Int
	CreateTime        *big.Int
	ItemSerial        *big.Int
	ProofOfEncryption string
	DeliveredItemHash [32]byte
	TempBalanceProof  *big.Int
	EncryptionKey     string
	State             *big.Int
	IsRegistered      bool
}, error) {
	ret := new(struct {
		Publisher         common.Address
		Consumer          common.Address
		Deposit           *big.Int
		Duration          *big.Int
		CreateTime        *big.Int
		ItemSerial        *big.Int
		ProofOfEncryption string
		DeliveredItemHash [32]byte
		TempBalanceProof  *big.Int
		EncryptionKey     string
		State             *big.Int
		IsRegistered      bool
	})
	out := ret
	err := _Token.contract.Call(opts, out, "DeliverChannel", __channelSerial)
	return *ret, err
}

// DeliverChannel is a free data retrieval call binding the contract method 0xb31b6375.
//
// Solidity: function DeliverChannel(__channelSerial uint256) constant returns(_publisher address, _consumer address, _deposit uint256, _duration uint256, _CreateTime uint256, _ItemSerial uint256, _proofOfEncryption string, _deliveredItemHash bytes32, _tempBalanceProof uint256, _encryptionKey string, _state uint256, _isRegistered bool)
func (_Token *TokenSession) DeliverChannel(__channelSerial *big.Int) (struct {
	Publisher         common.Address
	Consumer          common.Address
	Deposit           *big.Int
	Duration          *big.Int
	CreateTime        *big.Int
	ItemSerial        *big.Int
	ProofOfEncryption string
	DeliveredItemHash [32]byte
	TempBalanceProof  *big.Int
	EncryptionKey     string
	State             *big.Int
	IsRegistered      bool
}, error) {
	return _Token.Contract.DeliverChannel(&_Token.CallOpts, __channelSerial)
}

// DeliverChannel is a free data retrieval call binding the contract method 0xb31b6375.
//
// Solidity: function DeliverChannel(__channelSerial uint256) constant returns(_publisher address, _consumer address, _deposit uint256, _duration uint256, _CreateTime uint256, _ItemSerial uint256, _proofOfEncryption string, _deliveredItemHash bytes32, _tempBalanceProof uint256, _encryptionKey string, _state uint256, _isRegistered bool)
func (_Token *TokenCallerSession) DeliverChannel(__channelSerial *big.Int) (struct {
	Publisher         common.Address
	Consumer          common.Address
	Deposit           *big.Int
	Duration          *big.Int
	CreateTime        *big.Int
	ItemSerial        *big.Int
	ProofOfEncryption string
	DeliveredItemHash [32]byte
	TempBalanceProof  *big.Int
	EncryptionKey     string
	State             *big.Int
	IsRegistered      bool
}, error) {
	return _Token.Contract.DeliverChannel(&_Token.CallOpts, __channelSerial)
}

// DeliverItem is a free data retrieval call binding the contract method 0xc96710d5.
//
// Solidity: function DeliverItem(__itemSerial uint256) constant returns(_publisher address, _itemPrice uint256, _itemLocation string, _itemSize string, _itemType string, _itemDuration uint256, _itemCreateTime uint256, __itemHash bytes32, _isRegistered bool)
func (_Token *TokenCaller) DeliverItem(opts *bind.CallOpts, __itemSerial *big.Int) (struct {
	Publisher      common.Address
	ItemPrice      *big.Int
	ItemLocation   string
	ItemSize       string
	ItemType       string
	ItemDuration   *big.Int
	ItemCreateTime *big.Int
	ItemHash       [32]byte
	IsRegistered   bool
}, error) {
	ret := new(struct {
		Publisher      common.Address
		ItemPrice      *big.Int
		ItemLocation   string
		ItemSize       string
		ItemType       string
		ItemDuration   *big.Int
		ItemCreateTime *big.Int
		ItemHash       [32]byte
		IsRegistered   bool
	})
	out := ret
	err := _Token.contract.Call(opts, out, "DeliverItem", __itemSerial)
	return *ret, err
}

// DeliverItem is a free data retrieval call binding the contract method 0xc96710d5.
//
// Solidity: function DeliverItem(__itemSerial uint256) constant returns(_publisher address, _itemPrice uint256, _itemLocation string, _itemSize string, _itemType string, _itemDuration uint256, _itemCreateTime uint256, __itemHash bytes32, _isRegistered bool)
func (_Token *TokenSession) DeliverItem(__itemSerial *big.Int) (struct {
	Publisher      common.Address
	ItemPrice      *big.Int
	ItemLocation   string
	ItemSize       string
	ItemType       string
	ItemDuration   *big.Int
	ItemCreateTime *big.Int
	ItemHash       [32]byte
	IsRegistered   bool
}, error) {
	return _Token.Contract.DeliverItem(&_Token.CallOpts, __itemSerial)
}

// DeliverItem is a free data retrieval call binding the contract method 0xc96710d5.
//
// Solidity: function DeliverItem(__itemSerial uint256) constant returns(_publisher address, _itemPrice uint256, _itemLocation string, _itemSize string, _itemType string, _itemDuration uint256, _itemCreateTime uint256, __itemHash bytes32, _isRegistered bool)
func (_Token *TokenCallerSession) DeliverItem(__itemSerial *big.Int) (struct {
	Publisher      common.Address
	ItemPrice      *big.Int
	ItemLocation   string
	ItemSize       string
	ItemType       string
	ItemDuration   *big.Int
	ItemCreateTime *big.Int
	ItemHash       [32]byte
	IsRegistered   bool
}, error) {
	return _Token.Contract.DeliverItem(&_Token.CallOpts, __itemSerial)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(owner address, spender address) constant returns(uint256)
func (_Token *TokenCaller) Allowance(opts *bind.CallOpts, owner common.Address, spender common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "allowance", owner, spender)
	return *ret0, err
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(owner address, spender address) constant returns(uint256)
func (_Token *TokenSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Token.Contract.Allowance(&_Token.CallOpts, owner, spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(owner address, spender address) constant returns(uint256)
func (_Token *TokenCallerSession) Allowance(owner common.Address, spender common.Address) (*big.Int, error) {
	return _Token.Contract.Allowance(&_Token.CallOpts, owner, spender)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(owner address) constant returns(uint256)
func (_Token *TokenCaller) BalanceOf(opts *bind.CallOpts, owner common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "balanceOf", owner)
	return *ret0, err
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(owner address) constant returns(uint256)
func (_Token *TokenSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _Token.Contract.BalanceOf(&_Token.CallOpts, owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(owner address) constant returns(uint256)
func (_Token *TokenCallerSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _Token.Contract.BalanceOf(&_Token.CallOpts, owner)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "decimals")
	return *ret0, err
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCallerSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_Token *TokenCaller) IsOwner(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "isOwner")
	return *ret0, err
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_Token *TokenSession) IsOwner() (bool, error) {
	return _Token.Contract.IsOwner(&_Token.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0x8f32d59b.
//
// Solidity: function isOwner() constant returns(bool)
func (_Token *TokenCallerSession) IsOwner() (bool, error) {
	return _Token.Contract.IsOwner(&_Token.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCallerSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCallerSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "symbol")
	return *ret0, err
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCallerSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_Token *TokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "totalSupply")
	return *ret0, err
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_Token *TokenSession) TotalSupply() (*big.Int, error) {
	return _Token.Contract.TotalSupply(&_Token.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_Token *TokenCallerSession) TotalSupply() (*big.Int, error) {
	return _Token.Contract.TotalSupply(&_Token.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(spender address, value uint256) returns(bool)
func (_Token *TokenTransactor) Approve(opts *bind.TransactOpts, spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "approve", spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(spender address, value uint256) returns(bool)
func (_Token *TokenSession) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Approve(&_Token.TransactOpts, spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(spender address, value uint256) returns(bool)
func (_Token *TokenTransactorSession) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Approve(&_Token.TransactOpts, spender, value)
}

// CompleteChannel is a paid mutator transaction binding the contract method 0x959bd5de.
//
// Solidity: function completeChannel(__channelSerial uint256, __encryptionKey string, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns()
func (_Token *TokenTransactor) CompleteChannel(opts *bind.TransactOpts, __channelSerial *big.Int, __encryptionKey string, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "completeChannel", __channelSerial, __encryptionKey, __balanceProof, v, r, s, __balance)
}

// CompleteChannel is a paid mutator transaction binding the contract method 0x959bd5de.
//
// Solidity: function completeChannel(__channelSerial uint256, __encryptionKey string, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns()
func (_Token *TokenSession) CompleteChannel(__channelSerial *big.Int, __encryptionKey string, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CompleteChannel(&_Token.TransactOpts, __channelSerial, __encryptionKey, __balanceProof, v, r, s, __balance)
}

// CompleteChannel is a paid mutator transaction binding the contract method 0x959bd5de.
//
// Solidity: function completeChannel(__channelSerial uint256, __encryptionKey string, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns()
func (_Token *TokenTransactorSession) CompleteChannel(__channelSerial *big.Int, __encryptionKey string, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CompleteChannel(&_Token.TransactOpts, __channelSerial, __encryptionKey, __balanceProof, v, r, s, __balance)
}

// ConsumerCancelChannel is a paid mutator transaction binding the contract method 0x0fd93a2c.
//
// Solidity: function consumerCancelChannel(__channelSerial uint256) returns()
func (_Token *TokenTransactor) ConsumerCancelChannel(opts *bind.TransactOpts, __channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "consumerCancelChannel", __channelSerial)
}

// ConsumerCancelChannel is a paid mutator transaction binding the contract method 0x0fd93a2c.
//
// Solidity: function consumerCancelChannel(__channelSerial uint256) returns()
func (_Token *TokenSession) ConsumerCancelChannel(__channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.ConsumerCancelChannel(&_Token.TransactOpts, __channelSerial)
}

// ConsumerCancelChannel is a paid mutator transaction binding the contract method 0x0fd93a2c.
//
// Solidity: function consumerCancelChannel(__channelSerial uint256) returns()
func (_Token *TokenTransactorSession) ConsumerCancelChannel(__channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.ConsumerCancelChannel(&_Token.TransactOpts, __channelSerial)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x77b6198f.
//
// Solidity: function createChannel(__deposit uint256, __itemSerial uint256) returns()
func (_Token *TokenTransactor) CreateChannel(opts *bind.TransactOpts, __deposit *big.Int, __itemSerial *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "createChannel", __deposit, __itemSerial)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x77b6198f.
//
// Solidity: function createChannel(__deposit uint256, __itemSerial uint256) returns()
func (_Token *TokenSession) CreateChannel(__deposit *big.Int, __itemSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CreateChannel(&_Token.TransactOpts, __deposit, __itemSerial)
}

// CreateChannel is a paid mutator transaction binding the contract method 0x77b6198f.
//
// Solidity: function createChannel(__deposit uint256, __itemSerial uint256) returns()
func (_Token *TokenTransactorSession) CreateChannel(__deposit *big.Int, __itemSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CreateChannel(&_Token.TransactOpts, __deposit, __itemSerial)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(spender address, subtractedValue uint256) returns(bool)
func (_Token *TokenTransactor) DecreaseAllowance(opts *bind.TransactOpts, spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "decreaseAllowance", spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(spender address, subtractedValue uint256) returns(bool)
func (_Token *TokenSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Token.Contract.DecreaseAllowance(&_Token.TransactOpts, spender, subtractedValue)
}

// DecreaseAllowance is a paid mutator transaction binding the contract method 0xa457c2d7.
//
// Solidity: function decreaseAllowance(spender address, subtractedValue uint256) returns(bool)
func (_Token *TokenTransactorSession) DecreaseAllowance(spender common.Address, subtractedValue *big.Int) (*types.Transaction, error) {
	return _Token.Contract.DecreaseAllowance(&_Token.TransactOpts, spender, subtractedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(spender address, addedValue uint256) returns(bool)
func (_Token *TokenTransactor) IncreaseAllowance(opts *bind.TransactOpts, spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "increaseAllowance", spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(spender address, addedValue uint256) returns(bool)
func (_Token *TokenSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Token.Contract.IncreaseAllowance(&_Token.TransactOpts, spender, addedValue)
}

// IncreaseAllowance is a paid mutator transaction binding the contract method 0x39509351.
//
// Solidity: function increaseAllowance(spender address, addedValue uint256) returns(bool)
func (_Token *TokenTransactorSession) IncreaseAllowance(spender common.Address, addedValue *big.Int) (*types.Transaction, error) {
	return _Token.Contract.IncreaseAllowance(&_Token.TransactOpts, spender, addedValue)
}

// PublisherSideCancelChannel is a paid mutator transaction binding the contract method 0x7ca4e563.
//
// Solidity: function publisherSideCancelChannel(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(state uint256)
func (_Token *TokenTransactor) PublisherSideCancelChannel(opts *bind.TransactOpts, __channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "publisherSideCancelChannel", __channelSerial, __balanceProof, v, r, s, __balance)
}

// PublisherSideCancelChannel is a paid mutator transaction binding the contract method 0x7ca4e563.
//
// Solidity: function publisherSideCancelChannel(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(state uint256)
func (_Token *TokenSession) PublisherSideCancelChannel(__channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.PublisherSideCancelChannel(&_Token.TransactOpts, __channelSerial, __balanceProof, v, r, s, __balance)
}

// PublisherSideCancelChannel is a paid mutator transaction binding the contract method 0x7ca4e563.
//
// Solidity: function publisherSideCancelChannel(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(state uint256)
func (_Token *TokenTransactorSession) PublisherSideCancelChannel(__channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.PublisherSideCancelChannel(&_Token.TransactOpts, __channelSerial, __balanceProof, v, r, s, __balance)
}

// RegisterItem is a paid mutator transaction binding the contract method 0x52d2225e.
//
// Solidity: function registerItem(__itemPrice uint256, __itemLocation string, __itemSize string, __itemType string, __itemDuration uint256, __itemCreateTime uint256, __itemHash bytes32) returns()
func (_Token *TokenTransactor) RegisterItem(opts *bind.TransactOpts, __itemPrice *big.Int, __itemLocation string, __itemSize string, __itemType string, __itemDuration *big.Int, __itemCreateTime *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "registerItem", __itemPrice, __itemLocation, __itemSize, __itemType, __itemDuration, __itemCreateTime, __itemHash)
}

// RegisterItem is a paid mutator transaction binding the contract method 0x52d2225e.
//
// Solidity: function registerItem(__itemPrice uint256, __itemLocation string, __itemSize string, __itemType string, __itemDuration uint256, __itemCreateTime uint256, __itemHash bytes32) returns()
func (_Token *TokenSession) RegisterItem(__itemPrice *big.Int, __itemLocation string, __itemSize string, __itemType string, __itemDuration *big.Int, __itemCreateTime *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.Contract.RegisterItem(&_Token.TransactOpts, __itemPrice, __itemLocation, __itemSize, __itemType, __itemDuration, __itemCreateTime, __itemHash)
}

// RegisterItem is a paid mutator transaction binding the contract method 0x52d2225e.
//
// Solidity: function registerItem(__itemPrice uint256, __itemLocation string, __itemSize string, __itemType string, __itemDuration uint256, __itemCreateTime uint256, __itemHash bytes32) returns()
func (_Token *TokenTransactorSession) RegisterItem(__itemPrice *big.Int, __itemLocation string, __itemSize string, __itemType string, __itemDuration *big.Int, __itemCreateTime *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.Contract.RegisterItem(&_Token.TransactOpts, __itemPrice, __itemLocation, __itemSize, __itemType, __itemDuration, __itemCreateTime, __itemHash)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Token *TokenTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Token *TokenSession) RenounceOwnership() (*types.Transaction, error) {
	return _Token.Contract.RenounceOwnership(&_Token.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Token *TokenTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Token.Contract.RenounceOwnership(&_Token.TransactOpts)
}

// SaveBalanceProof is a paid mutator transaction binding the contract method 0x35239822.
//
// Solidity: function saveBalanceProof(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(bool)
func (_Token *TokenTransactor) SaveBalanceProof(opts *bind.TransactOpts, __channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "saveBalanceProof", __channelSerial, __balanceProof, v, r, s, __balance)
}

// SaveBalanceProof is a paid mutator transaction binding the contract method 0x35239822.
//
// Solidity: function saveBalanceProof(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(bool)
func (_Token *TokenSession) SaveBalanceProof(__channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SaveBalanceProof(&_Token.TransactOpts, __channelSerial, __balanceProof, v, r, s, __balance)
}

// SaveBalanceProof is a paid mutator transaction binding the contract method 0x35239822.
//
// Solidity: function saveBalanceProof(__channelSerial uint256, __balanceProof bytes32, v uint8, r bytes32, s bytes32, __balance uint256) returns(bool)
func (_Token *TokenTransactorSession) SaveBalanceProof(__channelSerial *big.Int, __balanceProof [32]byte, v uint8, r [32]byte, s [32]byte, __balance *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SaveBalanceProof(&_Token.TransactOpts, __channelSerial, __balanceProof, v, r, s, __balance)
}

// SaveItemHash is a paid mutator transaction binding the contract method 0xd2ee42e3.
//
// Solidity: function saveItemHash(__channelSerial uint256, __itemHash bytes32) returns(bool)
func (_Token *TokenTransactor) SaveItemHash(opts *bind.TransactOpts, __channelSerial *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "saveItemHash", __channelSerial, __itemHash)
}

// SaveItemHash is a paid mutator transaction binding the contract method 0xd2ee42e3.
//
// Solidity: function saveItemHash(__channelSerial uint256, __itemHash bytes32) returns(bool)
func (_Token *TokenSession) SaveItemHash(__channelSerial *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.Contract.SaveItemHash(&_Token.TransactOpts, __channelSerial, __itemHash)
}

// SaveItemHash is a paid mutator transaction binding the contract method 0xd2ee42e3.
//
// Solidity: function saveItemHash(__channelSerial uint256, __itemHash bytes32) returns(bool)
func (_Token *TokenTransactorSession) SaveItemHash(__channelSerial *big.Int, __itemHash [32]byte) (*types.Transaction, error) {
	return _Token.Contract.SaveItemHash(&_Token.TransactOpts, __channelSerial, __itemHash)
}

// SaveReceivedContent is a paid mutator transaction binding the contract method 0x2f0dd721.
//
// Solidity: function saveReceivedContent(__proofOfEncryption string, __channelSerial uint256) returns(bool)
func (_Token *TokenTransactor) SaveReceivedContent(opts *bind.TransactOpts, __proofOfEncryption string, __channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "saveReceivedContent", __proofOfEncryption, __channelSerial)
}

// SaveReceivedContent is a paid mutator transaction binding the contract method 0x2f0dd721.
//
// Solidity: function saveReceivedContent(__proofOfEncryption string, __channelSerial uint256) returns(bool)
func (_Token *TokenSession) SaveReceivedContent(__proofOfEncryption string, __channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SaveReceivedContent(&_Token.TransactOpts, __proofOfEncryption, __channelSerial)
}

// SaveReceivedContent is a paid mutator transaction binding the contract method 0x2f0dd721.
//
// Solidity: function saveReceivedContent(__proofOfEncryption string, __channelSerial uint256) returns(bool)
func (_Token *TokenTransactorSession) SaveReceivedContent(__proofOfEncryption string, __channelSerial *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SaveReceivedContent(&_Token.TransactOpts, __proofOfEncryption, __channelSerial)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns(bool)
func (_Token *TokenTransactor) Transfer(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "transfer", to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns(bool)
func (_Token *TokenSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Transfer(&_Token.TransactOpts, to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns(bool)
func (_Token *TokenTransactorSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Transfer(&_Token.TransactOpts, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_Token *TokenTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "transferFrom", from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_Token *TokenSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.TransferFrom(&_Token.TransactOpts, from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_Token *TokenTransactorSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _Token.Contract.TransferFrom(&_Token.TransactOpts, from, to, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_Token *TokenTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_Token *TokenSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Token.Contract.TransferOwnership(&_Token.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(newOwner address) returns()
func (_Token *TokenTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Token.Contract.TransferOwnership(&_Token.TransactOpts, newOwner)
}

// TokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the Token contract.
type TokenApprovalIterator struct {
	Event *TokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenApproval represents a Approval event raised by the Token contract.
type TokenApproval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: e Approval(owner indexed address, spender indexed address, value uint256)
func (_Token *TokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*TokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Token.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &TokenApprovalIterator{contract: _Token.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: e Approval(owner indexed address, spender indexed address, value uint256)
func (_Token *TokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *TokenApproval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _Token.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenApproval)
				if err := _Token.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// TokenOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Token contract.
type TokenOwnershipTransferredIterator struct {
	Event *TokenOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenOwnershipTransferred represents a OwnershipTransferred event raised by the Token contract.
type TokenOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: e OwnershipTransferred(previousOwner indexed address, newOwner indexed address)
func (_Token *TokenFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TokenOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Token.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TokenOwnershipTransferredIterator{contract: _Token.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: e OwnershipTransferred(previousOwner indexed address, newOwner indexed address)
func (_Token *TokenFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TokenOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Token.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenOwnershipTransferred)
				if err := _Token.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// TokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Token contract.
type TokenTransferIterator struct {
	Event *TokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenTransfer represents a Transfer event raised by the Token contract.
type TokenTransfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: e Transfer(from indexed address, to indexed address, value uint256)
func (_Token *TokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*TokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Token.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &TokenTransferIterator{contract: _Token.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: e Transfer(from indexed address, to indexed address, value uint256)
func (_Token *TokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *TokenTransfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Token.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenTransfer)
				if err := _Token.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

func check(e error) {
	if e != nil {
		panic(e)
	}
}

// key password = test

func main() {
	dat, err := ioutil.ReadFile("./key.json");
	check(err)
	var key = string(dat);

	conn, err := rpc.DialHTTP("HTTP://127.0.0.1:8545")
	if err != nil {
		log.Fatalf("Failed to connect to the Ethereum client: %v", err)
	}
	auth, err := bind.NewTransactor(strings.NewReader(key), "test")
	if err != nil {
		log.Fatalf("Failed to create authorized transactor: %v", err)
	}

	client := ethclient.NewClient(conn);


	// Deploy a new awesome contract for the binding demo
	address, tx, token, err := DeployToken(auth, client)
	if err != nil {
		log.Fatalf("Failed to deploy new token contract: %v", err)
	}
	fmt.Printf("Contract pending deploy: 0x%x\n", address)
	fmt.Printf("Transaction waiting to be mined: 0x%x\n\n", tx.Hash())
	fmt.Printf("Transaction waiting to be mined: 0x%x\n\n", token)

}
